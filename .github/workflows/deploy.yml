name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        id: load-cache
        uses: ./.github/actions/cached-deps # action.yaml is not required, github will find it automatically
        with:
          caching: 'true'
          working-directory: custom-actions/web-project/
      - name: Output cache status
        run: echo "Cache used 'value:${{ steps.load-cache.outputs.used-cache }}'"
      - name: Lint code
        run: npm run lint
        working-directory: custom-actions/web-project/
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        uses: ./.github/actions/cached-deps # action.yaml is not required, github will find it automatically
        with:
          caching: 'true'
          working-directory: custom-actions/web-project/
      - name: Test code
        id: run-tests
        run: npm run test
        working-directory: custom-actions/web-project/
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: custom-actions/web-project/test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & Cache dependencies
        uses: ./.github/actions/cached-deps # action.yaml is not required, github will find it automatically
        with:
          caching: 'true'
          working-directory: custom-actions/web-project/
      - name: Build website
        run: npm run build
        working-directory: custom-actions/web-project/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: custom-actions/web-project/dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        uses: ./.github/actions/deploy-s3-javascript
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket-name: my-website-bucket
          bucket-region: us-east-1
          source-directory: ./dist
